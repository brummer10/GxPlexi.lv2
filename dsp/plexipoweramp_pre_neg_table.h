
// plexipoweramp_pre_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -3.000000
 // --table_div  52.135743
 // --table_op  1.000000

struct tableplexipoweramp_pre_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableplexipoweramp_pre_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableplexipoweramp_pre_neg&() const { return *(tableplexipoweramp_pre_neg*)this; }
};

 static tableplexipoweramp_pre_neg_imp<200> plexipoweramp_pre_neg_table __rt_data = {
	0,0.631895,66.3333,200, {
	0.000000000000,0.001931864379,0.006723889471,0.012886744271,0.019698210900,
	0.026808595618,0.034048636927,0.041336352911,0.048631953134,0.055916035642,
	0.063179049038,0.070416200621,0.077624996421,0.084804052841,0.091952522631,
	0.099069817579,0.106155474548,0.113209090725,0.120230292303,0.127218719311,
	0.134174018229,0.141095838385,0.147983830147,0.154837644015,0.161656930123,
	0.168441337949,0.175190516129,0.181904112314,0.188581773055,0.195223143701,
	0.201827868298,0.208395589500,0.214925948480,0.221418584838,0.227873136526,
	0.234289239758,0.240666528938,0.247004636582,0.253303193244,0.259561827454,
	0.265780165649,0.271957832113,0.278094448924,0.284189635902,0.290243010565,
	0.296254188088,0.302222781270,0.308148400509,0.314030653778,0.319869146618,
	0.325663482130,0.331413260980,0.337118081410,0.342777539266,0.348391228024,
	0.353958738841,0.359479660604,0.364953580002,0.370380081604,0.375758747953,
	0.381089159680,0.386370895618,0.391603532953,0.396786647373,0.401919813249,
	0.407002603824,0.412034591432,0.417015347726,0.421944443942,0.426821451172,
	0.431645940670,0.436417484178,0.441135654280,0.445800024784,0.450410171128,
	0.454965670817,0.459466103893,0.463911053429,0.468300106058,0.472632852541,
	0.476908888353,0.481127814319,0.485289237273,0.489392770758,0.493438035762,
	0.497424661480,0.501352286125,0.505220557765,0.509029135197,0.512777688856,
	0.516465901758,0.520093470472,0.523660106128,0.527165535448,0.530609501809,
	0.533991766328,0.537312108968,0.540570329665,0.543766249467,0.546899711685,
	0.549970583052,0.552978754878,0.555924144208,0.558806694967,0.561626379084,
	0.564383197607,0.567077181773,0.569708394051,0.572276929143,0.574782914924,
	0.577226513332,0.579607921181,0.581927370910,0.584185131238,0.586381507735,
	0.588516843284,0.590591518454,0.592605951738,0.594560599694,0.596455956939,
	0.598292556033,0.600070967214,0.601791798003,0.603455692667,0.605063331544,
	0.606615430221,0.608112738581,0.609556039705,0.610946148647,0.612283911072,
	0.613570201784,0.614805923124,0.615992003269,0.617129394435,0.618219070982,
	0.619262027451,0.620259276534,0.621211846984,0.622120781496,0.622987134545,
	0.623811970221,0.624596360059,0.625341380872,0.626048112616,0.626717636282,
	0.627351031839,0.627949376230,0.628513741432,0.629045192593,0.629544786254,
	0.630013568655,0.630452574136,0.630862823646,0.631245323348,0.631601063333,
	0.631931016443,0.632236137203,0.632517360868,0.632775602566,0.633011756564,
	0.633226695624,0.633421270474,0.633596309367,0.633752617742,0.633890977973,
	0.634012149201,0.634116867247,0.634205844612,0.634279770526,0.634339311084,
	0.634385109429,0.634417785994,0.634437938793,0.634446143758,0.634442955112,
	0.634428905784,0.634404507848,0.634370252991,0.634326613002,0.634274040286,
	0.634212968379,0.634143812493,0.634066970051,0.633982821242,0.633891729573,
	0.633794042419,0.633690091579,0.633580193822,0.633464651429,0.633343752737,
	0.633217772657,0.633086973205,0.632951604003,0.632811902784,0.632668095872,
	0.632520398665,0.632369016091,0.632214143058,0.632055964890,0.631894657747
	}
};

double always_inline plexipoweramp_pre_negclip(double x) {
    double f = fabs(x);
    f = f * plexipoweramp_pre_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = plexipoweramp_pre_neg_table.data[0];
    } else if (i >= plexipoweramp_pre_neg_table.size-1) {
        f = plexipoweramp_pre_neg_table.data[plexipoweramp_pre_neg_table.size-1];
    } else {
    f -= i;
    f = plexipoweramp_pre_neg_table.data[i]*(1-f) + plexipoweramp_pre_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}

