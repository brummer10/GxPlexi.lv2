
// plexipoweramptone_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -3.000000
 // --table_div  29.005422
 // --table_op  0.800000

struct tableplexipoweramptone_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableplexipoweramptone_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableplexipoweramptone_neg&() const { return *(tableplexipoweramptone_neg*)this; }
};

 static tableplexipoweramptone_neg_imp<200> plexipoweramptone_neg_table __rt_data = {
	0,0.897753,53.0667,200, {
	0.000000000000,0.002518728747,0.008639877222,0.016247284095,0.024340167752,
	0.032456995609,0.040395275000,0.048075933838,0.055477874417,0.062606483895,
	0.069478550857,0.076115098814,0.082538034234,0.088768627784,0.094826872423,
	0.100731257141,0.106498734240,0.112144773525,0.117683452459,0.123127558210,
	0.128488690430,0.133777359812,0.139003080425,0.144174455220,0.149299254743,
	0.154384489364,0.159436475456,0.164460895969,0.169462855861,0.174446932787,
	0.179417223466,0.184377386076,0.189330679017,0.194279996351,0.199227900197,
	0.204176650345,0.209128231324,0.214084377130,0.219046593836,0.224016180234,
	0.228994246701,0.233981732432,0.238979421169,0.243987955569,0.249007850321,
	0.254039504112,0.259083210553,0.264139168140,0.269207489342,0.274288208888,
	0.279381291318,0.284486637865,0.289604092722,0.294733448750,0.299874452675,
	0.305026809806,0.310190188339,0.315364223258,0.320548519880,0.325742657075,
	0.330946190186,0.336158653671,0.341379563504,0.346608419338,0.351844706462,
	0.357087897575,0.362337454374,0.367592828993,0.372853465291,0.378118800005,
	0.383388263796,0.388661282167,0.393937276288,0.399215663736,0.404495859137,
	0.409777274747,0.415059320947,0.420341406690,0.425622939881,0.430903327707,
	0.436181976919,0.441458294072,0.446731685722,0.452001558591,0.457267319698,
	0.462528376460,0.467784136765,0.473034009027,0.478277402212,0.483513725849,
	0.488742390023,0.493962805353,0.499174382954,0.504376534391,0.509568671619,
	0.514750206917,0.519920552812,0.525079122001,0.530225327263,0.535358581373,
	0.540478297008,0.545583886659,0.550674762538,0.555750336487,0.560810019896,
	0.565853223614,0.570879357877,0.575887832238,0.580878055500,0.585849435670,
	0.590801379915,0.595733294534,0.600644584944,0.605534655685,0.610402910438,
	0.615248752067,0.620071582681,0.624870803720,0.629645816066,0.634396020187,
	0.639120816302,0.643819604591,0.648491785424,0.653136759647,0.657753928888,
	0.662342695917,0.666902465045,0.671432642573,0.675932637282,0.680401860980,
	0.684839729093,0.689245661318,0.693619082306,0.697959422463,0.702266118692,
	0.706538615297,0.710776364885,0.714978829326,0.719145480768,0.723275802689,
	0.727369290993,0.731425455139,0.735443819302,0.739423923554,0.743365325064,
	0.747267599294,0.751130341211,0.754953166461,0.758735712542,0.762477639926,
	0.766178633142,0.769838401794,0.773456681511,0.777033234816,0.780567851892,
	0.784060351247,0.787510580267,0.790918415630,0.794283763603,0.797606560185,
	0.800886771114,0.804124391720,0.807319446636,0.810471989353,0.813582101636,
	0.816649892793,0.819675498826,0.822659081425,0.825600826879,0.828500944871,
	0.831359667175,0.834177246290,0.836953953996,0.839690079876,0.842385929794,
	0.845041824364,0.847658097407,0.850235094425,0.852773171096,0.855272691799,
	0.857734028198,0.860157557867,0.862543662989,0.864892729123,0.867205144048,
	0.869481296684,0.871721576101,0.873926370616,0.876096066964,0.878231049565,
	0.880331699874,0.882398395801,0.884431511225,0.886431415567,0.888398473448,
	0.890333044399,0.892235482640,0.894106136919,0.895945350390,0.897753460547
	}
};

double always_inline plexipoweramptone_negclip(double x) {
    double f = fabs(x);
    f = f * plexipoweramptone_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = plexipoweramptone_neg_table.data[0];
    } else if (i >= plexipoweramptone_neg_table.size-1) {
        f = plexipoweramptone_neg_table.data[plexipoweramptone_neg_table.size-1];
    } else {
    f -= i;
    f = plexipoweramptone_neg_table.data[i]*(1-f) + plexipoweramptone_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}

